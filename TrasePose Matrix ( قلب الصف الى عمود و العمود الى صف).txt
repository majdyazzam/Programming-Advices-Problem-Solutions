

#include <iostream>
#include<iomanip>
#include<string>
using namespace std;

void FillArrayOrderedNumber(int arr[3][3],int row,int col) {
	int count = 0;
	for (int i = 0; i < row;i++) {
		for (int j = 0; j < col;j++) {
			arr[i][j] = ++count ;
		}
	}
}
void SaveRwoToCol(int arr[3][3], int TransposeArr[3][3], int rowNum, int col) {

	for (int j = 0; j < col;j++) {

	}
}

void TransposeArray(int arr[3][3],int TransposeArr[3][3], int row, int col) {

	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			TransposeArr[j][i] = arr[i][j];
		}
		
	}

}
void Print2DArray(int arr[3][3], int row, int col) {
	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			cout<< setw(5) <<arr[i][j] ;
		}
		cout << endl;
	}
}
void PrintTransposeArray( int TransposeArr[3][3], int row, int col) {
	cout << "\n\n\nThe following is a Transpose 3X3 ordered matrix : \n";
	for (int i = 0; i < row; i++) {
		for (int j = 0; j < col; j++) {
			cout<<setw(5)<<TransposeArr[i][j] ;
		}
		cout << endl;

	}

}
int main()
{
	
	int arr[3][3];
	int TransposeArr[3][3];
	FillArrayOrderedNumber(arr, 3, 3);
	cout << "The following is a 3X3 ordered matrix : \n";
	Print2DArray(arr, 3, 3);
	TransposeArray(arr, TransposeArr,3,3);
	PrintTransposeArray(TransposeArr, 3, 3);
	system("pause>0");
	return 0;
}

